---
title: "Workshop: Data Visualizations with the Ames Housing Dataset"
---

## Introduction

In this workshop, you'll apply your knowledge of data visualization using the Ames housing dataset.

In the first section, you'll create simple plots to explore various aspects of the dataset.

In the second section, you'll practice fixing code errors and improving code readability.

In the third section, you'll create plots using a for loop.

In the fourth section, you'll create a multivariate plot and interpret your findings.

The first two sections should be completed together in your group. The last two sections can be completed individually.

## Part 1: Exploratory Data Visualization

Consider the following questions about the Ames housing dataset. For each question, create a simple plot that addresses the question. Your plots do not have to be elegant; focus on selecting the appropriate type of visualization for each question. (No need to customize axes, labels, etc.)

First, import the necessary libraries and read in the dataset:

```{python}
import pandas as pd
import plotly.express as px

ames = pd.read_csv("ames.csv")
ames.columns = ames.columns.str.replace(".", "_")
```

1. **What is the relationship between the size of the house and the price?** (This will be done for you in class.)
   - Variables: `Lot_Area`, `price`

```{python}
# Create a scatter plot of Lot_Area vs. price
# ANSWER HERE
```

2. **Are houses originally built earlier in the 1900s more expensive than those built later in the century?**
   - Variables: `Year_Built`, `price`

```{python}
# Create a plot to explore the relationship between Year_Built and price
# ANSWER HERE
```

3. **What is the most common type of primary exterior material?**
   - Variable: `Exterior_1st`

```{python}
# Create a plot to show the distribution of Exterior_1st
# ANSWER HERE
```

4. **How does the price vary across different exterior types?**
   - Variables: `Exterior_1st`, `price`

```{python}
# Create a plot to show how price varies across Exterior_1st
# ANSWER HERE
```

5. **Which neighborhoods have the highest proportions of Single-family Detached homes?**
   - Variables: `Neighborhood`, `Bldg_Type`

```{python}
# Create a plot to show the proportions of Single-family Detached homes across neighborhoods
# ANSWER HERE
```

## Part 2: Fixing Errors

The following code chunk attempts to create a stacked bar chart of the `Central_Air` variable, but it contains several syntax errors. Your task is to correct the errors and improve the readability of the code.

```{python}
# First we use the replace method to change values according to the mapping
# We have not taught this yet, but you should be able to read and understand the gist of it

# Define a dictionary to map the values (replace with their full names)
heating_qc_labels = [
    "Ex": "Excellent"
    "Gd": "Good"
    "TA": "Average/Typical",
    "Fa": "Fair",
    "Po": "Poor",
]

central_air_labels = {
    "Y": "Central Air Conditioning",
    "N": "No Central Air Conditioning",
}

# Apply the mapping to the DataFrame
ames = ames.assign(
    Heating_QC_full=lambda df: df.Heating_QC.replace(heating_qc_labels),
    Central_Air_full=lambda df: df.Central_Air.replace(central_air_LABEL),
)

# Create the plot with the updated DataFrame
fig = px.histogram(
    AMES,
    y="Central_Air_full",
    color="Heating_QC_full",
    barnorm="percent",
    color_discrete_sequence=["#d9534f", "#e39283", "#e8c590", "#a3c9a8", "#5cb85c"],
    category_orders={
        "Heating_QC_full": ["Poor", "Fair", "Average/Typical", "Good", "Excellent"],
        "Central_Air_full": ["No Central Air Conditioning", "Central Air Conditioning"],
    },
    labels={
        "Central_Air_full": "",
        "Heating_QC_full": "Heating Quality",
    },
    title="Central Air Conditioning by Heating Quality in Ames Housing",
)
fig
```

### Instructions:

a. Identify and correct the syntax errors in the script so that it runs correctly.

b. Run the corrected code and observe the output.

c. Interpret the resulting plot.

## Part 2b: Exterior Condition by Exterior Type

Following the example above, create a horizontal percent-stacked bar chart showing the relationship between the type of exterior wall material (`Exterior_1st`) and the condition of the exterior wall (`Exter_Cond`).

- Your **y-axis** should be the `Exterior_1st` variable, and the values should have their full names shown on the plot.

- The **x-axis** should be the `Exter_Cond` variable, and the values should also show the full names on the plot.

- Feel free to use the same color scheme as in the example above.

- Your plot should have an appropriate title.

```{python}
# Create the plot as per instructions
# ANSWER HERE
```

## Part 3: Visualization with a For Loop

The plot below shows the distribution of the Roof style (`Roof_Style`) variable faceted by the slope of the property (`Land_Slope`).

```{python}
px.histogram(ames, x="Roof_Style", color="Land_Slope", facet_col="Land_Slope")
```

Recreate the same set of plots but using a for loop to iterate over the `Land_Slope` variable. The values for land slope are:

- **Gtl**: Gentle slope

- **Mod**: Moderate slope

- **Sev**: Severe slope

For each land slope category, create a plot showing the distribution of `Roof_Style`.

```{python}
# Use a for loop to create the plots
# ANSWER HERE
```

## Part 4: Multivariate Plot Individual Assignment

For this section, you will work individually. Your chosen plot should not be the same as those of your group members.

- Look through the dataset and decide on three or four variables that could be visualized on a single plot (or on a faceted plot).

- Create a multivariate plot that visualizes these variables.

- Write a brief interpretation of any findings you can deduce from the plot.

```{python}
# Create your multivariate plot
# ANSWER HERE
```